<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.18.0@b113f3ed0259fd6e212d87c3df80eec95a6abf19">
  <file src="src/Fixers.php">
    <PropertyTypeCoercion>
      <code>$value</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Rules.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[\array_merge(
            $this->value,
            $other->value,
        )]]></code>
    </MixedArgumentTypeCoercion>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->value]]></code>
      <code><![CDATA[array<string, array<string, mixed>|bool>]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="test/EndToEnd/RuleSet/AbstractRuleSetTestCase.php">
    <InternalClass>
      <code>Command\FixCommandExitStatusCalculator::EXIT_STATUS_FLAG_HAS_INVALID_CONFIG</code>
    </InternalClass>
  </file>
  <file src="test/Unit/FactoryTest.php">
    <PossiblyUnusedMethod>
      <code>provideTargetPhpVersionLessThanOrEqualToCurrentPhpVersion</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/FixersTest.php">
    <InvalidArgument>
      <code>$value</code>
    </InvalidArgument>
  </file>
  <file src="test/Unit/PhpVersion/MinorTest.php">
    <PossiblyUnusedMethod>
      <code>provideValidValue</code>
      <code>provideValueGreaterThanNinetyNine</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/PhpVersion/PatchTest.php">
    <PossiblyUnusedMethod>
      <code>provideValidValue</code>
      <code>provideValueGreaterThanNinetyNine</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/RuleSet/AbstractRuleSetTestCase.php">
    <InternalClass>
      <code>new FixerFactory()</code>
    </InternalClass>
    <InternalMethod>
      <code>getFixers</code>
      <code>new FixerFactory()</code>
      <code>registerBuiltInFixers</code>
    </InternalMethod>
    <MixedArgumentTypeCoercion>
      <code>static function (string $nameOfRule) use ($fixersThatAreRegistered): bool {
                if (!\array_key_exists($nameOfRule, $fixersThatAreRegistered)) {
                    return true;
                }

                $fixer = $fixersThatAreRegistered[$nameOfRule];

                return !$fixer instanceof Fixer\DeprecatedFixerInterface;
            }</code>
      <code><![CDATA[static function (string $nameOfRule) use ($fixersThatAreRegistered): bool {
                if (\str_starts_with($nameOfRule, '@')) {
                    return true;
                }

                return \array_key_exists(
                    $nameOfRule,
                    $fixersThatAreRegistered,
                );
            }]]></code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="test/Unit/RuleSet/ExplicitRuleSetTestCase.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[static function (string $nameOfRule): bool {
                return !\str_starts_with($nameOfRule, '@');
            }]]></code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="test/Unit/RuleSetTest.php">
    <PossiblyUnusedMethod>
      <code>provideValidHeader</code>
    </PossiblyUnusedMethod>
  </file>
</files>
